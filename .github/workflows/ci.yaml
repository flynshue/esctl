name: ci

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Download Go deps
        run: go mod download

      - name: Get version
        id: versions
        run: echo "version=$(<VERSION)" >> $GITHUB_OUTPUT

      - name: Check if Tag Exists
        id: check_tag
        run: |
          git ls-remote --exit-code --tags origin '${{ steps.versions.outputs.version }}' && found=true
          if [[ "${found}" == "true" ]]; then
            echo "::error::The ${{ steps.versions.outputs.version }} tag already exists. Please update the version"
            exit 1
          fi

      - name: Create tag
        id: tag_version
        if: github.event_name == 'push'
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.versions.outputs.version }}
          tag_prefix: ""

      - name: GitHub Release
        if: github.event_name == 'push'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}

  goreleaser:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: stable

      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


